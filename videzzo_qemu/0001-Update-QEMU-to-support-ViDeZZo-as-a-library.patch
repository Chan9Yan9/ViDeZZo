diff --git a/include/qemu/osdep.h b/include/qemu/osdep.h
index b1c161c..42dfd3d 100644
--- a/include/qemu/osdep.h
+++ b/include/qemu/osdep.h
@@ -212,6 +212,15 @@ void QEMU_ERROR("code path is reachable")
 #error building with G_DISABLE_ASSERT is not supported
 #endif
 
+#ifdef VIDEZZO_LESS_CRASHES
+#undef assert
+#define assert(x)
+#undef g_assert
+#define g_assert(x)
+#undef g_assert_not_reached
+#define g_assert_not_reached()
+#endif
+
 #ifndef O_LARGEFILE
 #define O_LARGEFILE 0
 #endif
diff --git a/meson.build b/meson.build
index 8a8c415..f32b075 100644
--- a/meson.build
+++ b/meson.build
@@ -199,6 +199,11 @@ if get_option('gprof')
   qemu_ldflags += ['-p']
 endif
 
+if get_option('videzzo')
+  qemu_cflags += ['-videzzo-instrumentation=' + (meson.current_source_dir() / 'videzzo_qemu_types.yaml')]
+  qemu_cflags += ['-flegacy-pass-manager']
+endif
+
 # Specify linker-script with add_project_link_arguments so that it is not placed
 # within a linker --start-group/--end-group pair
 if get_option('fuzzing')
@@ -2889,6 +2894,7 @@ qmp_ss = ss.source_set()
 qom_ss = ss.source_set()
 softmmu_ss = ss.source_set()
 specific_fuzz_ss = ss.source_set()
+videzzo_fuzz_ss = ss.source_set()
 specific_ss = ss.source_set()
 stub_ss = ss.source_set()
 trace_ss = ss.source_set()
@@ -3162,6 +3168,7 @@ subdir('linux-user')
 # needed for fuzzing binaries
 subdir('tests/qtest/libqos')
 subdir('tests/qtest/fuzz')
+subdir('tests/qtest/videzzo')
 
 # accel modules
 tcg_real_module_ss = ss.source_set()
@@ -3514,6 +3521,15 @@ foreach target : target_dirs
         'dependencies': specific_fuzz.dependencies(),
       }]
     endif
+    if get_option('fuzzing')
+      videzzo_fuzz = videzzo_fuzz_ss.apply(config_target, strict: false)
+      execs += [{
+        'name': 'qemu-videzzo-' + target_name,
+        'win_subsystem': 'console',
+        'sources': videzzo_fuzz.sources(),
+        'dependencies': videzzo_fuzz.dependencies(),
+      }]
+    endif
   else
     execs = [{
       'name': 'qemu-' + target_name,
diff --git a/meson_options.txt b/meson_options.txt
index e58e158..441b74c 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -42,6 +42,8 @@ option('docs', type : 'feature', value : 'auto',
        description: 'Documentations build support')
 option('fuzzing', type : 'boolean', value: false,
        description: 'build fuzzing targets')
+option('videzzo', type : 'boolean', value: false,
+       description: 'build videzzo targets')
 option('gettext', type : 'feature', value : 'auto',
        description: 'Localization of the GTK+ user interface')
 option('module_upgrades', type : 'boolean', value : false,
diff --git a/scripts/oss-fuzz/instrumentation-filter-template b/scripts/oss-fuzz/instrumentation-filter-template
index 76d2b61..7909550 100644
--- a/scripts/oss-fuzz/instrumentation-filter-template
+++ b/scripts/oss-fuzz/instrumentation-filter-template
@@ -10,6 +10,7 @@ src:*/net/*
 # instrument the fuzzer entry-point so libFuzzer always sees at least some
 # coverage - otherwise it will exit after the first input
 src:*/tests/qtest/fuzz/fuzz.c
+src:*/tests/qtest/videzzo/videzzo_qemu.c
 
 # Enable instrumentation for all functions in those files
 fun:*
diff --git a/tests/qtest/videzzo/less_crashes_wrappers.c b/tests/qtest/videzzo/less_crashes_wrappers.c
new file mode 100644
index 0000000..faf775e
--- /dev/null
+++ b/tests/qtest/videzzo/less_crashes_wrappers.c
@@ -0,0 +1,26 @@
+/*
+ * Dependency-Aware Virtual-Device Fuzzing Less Crashes Wrapper
+ *
+ * Copyright Red Hat Inc., 2020
+ *
+ * Authors:
+ *  Qiang Liu <cyruscyliu@gmail.com>
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2 or later.
+ * See the COPYING file in the top-level directory.
+ */
+
+#define WRAP(RET_TYPE, NAME_AND_ARGS)\
+    RET_TYPE __wrap_##NAME_AND_ARGS;\
+    RET_TYPE __real_##NAME_AND_ARGS;
+
+WRAP(void     , abort())
+
+void __wrap_abort()
+{
+#ifdef VIDEZZO_LESS_CRASHES
+    return;
+#else
+    return __real_abort();
+#endif
+}
diff --git a/tests/qtest/videzzo/meson.build b/tests/qtest/videzzo/meson.build
new file mode 100644
index 0000000..b26ee22
--- /dev/null
+++ b/tests/qtest/videzzo/meson.build
@@ -0,0 +1,21 @@
+if not get_option('videzzo')
+  subdir_done()
+endif
+
+videzzo_fuzz_ss.add(files('less_crashes_wrappers.c'), qos)
+
+# Targets
+videzzo_fuzz_ss.add(files('videzzo_qemu.c'))
+
+# Dependencies
+videzzo_fuzz_ss.add(declare_dependency(
+  link_args: fuzz_exe_ldflags + ['-L' + meson.current_source_dir(),  '-lvidezzo'])
+)
+
+videzzo_fuzz_ss.add(declare_dependency(
+  link_args: fuzz_exe_ldflags + ['-lvncclient'])
+)
+
+videzzo_fuzz_ss.add(declare_dependency(
+  link_args: fuzz_exe_ldflags + ['-Wl,-wrap,abort'])
+)
